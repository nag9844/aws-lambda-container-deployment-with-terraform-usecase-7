name: AWS infra

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  lint-and-security:
    name: Lint and Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install TFLint
        run: |
          wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          tflint --version

      - name: Run TFLint
        run: |
          cd terraform
          tflint --init && tflint -f compact

      - name: Check Terraform formatting
        run: |
          cd terraform
          terraform fmt -check -recursive

  terraform:
    name: Terraform ${{ github.event.inputs.action }} - ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    needs: lint-and-security
    
    env:
      AWS_REGION: ap-south-1
      TF_VAR_environment: ${{ github.event.inputs.environment }}

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::199570228070:role/oidc-demo-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        if: github.event.inputs.action == 'apply'
        run: terraform plan -var-file=environments/${{ github.event.inputs.environment }}/terraform.tfvars -out=tfplan.binary

      - name: Show Terraform Plan Summary
        if: github.event.inputs.action == 'apply'
        run: terraform show -no-color tfplan.binary

      - name: Terraform Apply (from saved plan)
        if: github.event.inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan.binary

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -var-file=environments/${{ github.event.inputs.environment }}/terraform.tfvars -auto-approve

      - name: Output Infrastructure Details
        if: github.event.inputs.action == 'apply'
        run: |
          echo "## Infrastructure Outputs" >> $GITHUB_STEP_SUMMARY
          echo "### Environment: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          terraform output >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY