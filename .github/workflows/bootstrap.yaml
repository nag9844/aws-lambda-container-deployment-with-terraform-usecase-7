name: 'Bootstrap Infrastructure'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to bootstrap'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
      action:
        description: 'Bootstrap action'
        required: true
        default: 'apply'
        type: choice
        options:
        - plan
        - apply
        - destroy

permissions:
  contents: read
  id-token: write

jobs:
  bootstrap:
    name: 'Bootstrap State Backend'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    defaults:
      run:
        shell: bash
        working-directory: terraform/bootstrap

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::199570228070:role/oidc-demo-role
        aws-region: ap-south-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.0

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event.inputs.action == 'plan'
      run: terraform plan -var-file=${{ github.event.inputs.environment }}.tfvars

    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: terraform apply -var-file=${{ github.event.inputs.environment }}.tfvars -auto-approve

    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: terraform destroy -var-file=${{ github.event.inputs.environment }}.tfvars -auto-approve

    - name: Output Backend Config
      if: github.event.inputs.action == 'apply'
      run: |
        echo "Backend configuration created for ${{ github.event.inputs.environment }}:"
        terraform output backend_config